version: "3.8"

services:
  iot-server:
    build: ./iot-server
    container_name: iot-server
    ports:
      - "8080:8080"
    networks:
      - iot-lan
    restart: always

  sniffer:
    build: ./sniffer
    container_name: sniffer
    networks:
      - iot-lan
    cap_add:
      - NET_ADMIN
      - NET_RAW
    privileged: true
    restart: always
    command: ["python", "-u", "detect_syn.py"]
    depends_on:
      - iot-server

  device:
    build: ./device
    image: iot_temp_sensor:latest
    networks:
      - iot-lan
    environment:
      - COLLECTOR_HOST=iot-server
      - COLLECTOR_PORT=8080
      - DEVICE_PREFIX=device
      - INTERVAL=2
      - BASE_TEMP=22.0
      - TEMP_VARIANCE=0.5
      - BURST=false
    deploy:
      replicas: 5
    restart: always
    depends_on:
      - iot-server

  dashboard:
    build: ./dashboard
    container_name: dashboard
    ports:
      - "5002:5002"
    networks:
      - iot-lan
    restart: always
    depends_on:
      - iot-server

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    networks:
      - iot-lan
    depends_on:
      - dashboard
    restart: always

  attacker:
    build: ./attacker
    container_name: attacker
    networks:
      - iot-lan
    cap_add:
      - NET_RAW
      - NET_ADMIN
    privileged: true
    security_opt:
      - seccomp=unconfined
    stdin_open: true
    tty: true
    restart: "no"
    command: ["bash", "-lc", "sleep 3600"]

networks:
  iot-lan:
    driver: bridge
